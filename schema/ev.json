{
  "contract_name": "ev",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "denom"
    ],
    "properties": {
      "denom": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "publish_energy_transfer_offer"
        ],
        "properties": {
          "publish_energy_transfer_offer": {
            "type": "object",
            "required": [
              "charger_id",
              "location",
              "name",
              "plug_type",
              "tariff"
            ],
            "properties": {
              "charger_id": {
                "type": "string"
              },
              "location": {
                "$ref": "#/definitions/Location"
              },
              "name": {
                "type": "string"
              },
              "plug_type": {
                "$ref": "#/definitions/PlugType"
              },
              "tariff": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "remove_energy_offer"
        ],
        "properties": {
          "remove_energy_offer": {
            "type": "object",
            "required": [
              "energy_offer_id"
            ],
            "properties": {
              "energy_offer_id": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "start_energy_transfer"
        ],
        "properties": {
          "start_energy_transfer": {
            "type": "object",
            "required": [
              "driver",
              "energy_to_transfer",
              "energy_transfer_offer_id"
            ],
            "properties": {
              "driver": {
                "type": "string"
              },
              "energy_to_transfer": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "energy_transfer_offer_id": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "energy_transfer_started"
        ],
        "properties": {
          "energy_transfer_started": {
            "type": "object",
            "required": [
              "energy_transfer_id"
            ],
            "properties": {
              "energy_transfer_id": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "energy_transfer_completed"
        ],
        "properties": {
          "energy_transfer_completed": {
            "type": "object",
            "required": [
              "energy_transfer_id",
              "used_service_units"
            ],
            "properties": {
              "energy_transfer_id": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "used_service_units": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "cancel_energy_transfer"
        ],
        "properties": {
          "cancel_energy_transfer": {
            "type": "object",
            "required": [
              "energy_transfer_id"
            ],
            "properties": {
              "energy_transfer_id": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "remove_energy_transfer"
        ],
        "properties": {
          "remove_energy_transfer": {
            "type": "object",
            "required": [
              "energy_transfer_id"
            ],
            "properties": {
              "energy_transfer_id": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Location": {
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "properties": {
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PlugType": {
        "type": "string",
        "enum": [
          "type1",
          "type2",
          "c_h_ade_m_o",
          "c_c_s",
          "unspecified"
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "denom"
        ],
        "properties": {
          "denom": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "energy_transfer_offer"
        ],
        "properties": {
          "energy_transfer_offer": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "all_energy_transfer_offers"
        ],
        "properties": {
          "all_energy_transfer_offers": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "energy_transfer"
        ],
        "properties": {
          "energy_transfer": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "all_energy_transfers"
        ],
        "properties": {
          "all_energy_transfers": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "energy_transfer_offers"
        ],
        "properties": {
          "energy_transfer_offers": {
            "type": "object",
            "required": [
              "owner"
            ],
            "properties": {
              "owner": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "own_energy_transfers"
        ],
        "properties": {
          "own_energy_transfers": {
            "type": "object",
            "required": [
              "driver",
              "transfer_status"
            ],
            "properties": {
              "driver": {
                "type": "string"
              },
              "transfer_status": {
                "$ref": "#/definitions/TransferStatus"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "energy_transfers"
        ],
        "properties": {
          "energy_transfers": {
            "type": "object",
            "required": [
              "owner"
            ],
            "properties": {
              "owner": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "TransferStatus": {
        "type": "string",
        "enum": [
          "Requested",
          "Ongoing",
          "Paid",
          "Cancelled",
          "Unspecified"
        ]
      }
    }
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "type": "string",
    "enum": []
  },
  "sudo": null,
  "responses": {
    "all_energy_transfer_offers": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AllEnergyTransferOffersResponse",
      "type": "object",
      "required": [
        "energy_transfer_offers"
      ],
      "properties": {
        "energy_transfer_offers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnergyTransferOffer"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "ChargerStatus": {
          "type": "string",
          "enum": [
            "Active",
            "Busy",
            "Inactive",
            "Unspecified"
          ]
        },
        "EnergyTransferOffer": {
          "type": "object",
          "required": [
            "charger_id",
            "charger_status",
            "id",
            "location",
            "name",
            "owner",
            "plug_type",
            "tariff"
          ],
          "properties": {
            "charger_id": {
              "type": "string"
            },
            "charger_status": {
              "$ref": "#/definitions/ChargerStatus"
            },
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "location": {
              "$ref": "#/definitions/Location"
            },
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "plug_type": {
              "$ref": "#/definitions/PlugType"
            },
            "tariff": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        "Location": {
          "type": "object",
          "required": [
            "latitude",
            "longitude"
          ],
          "properties": {
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "PlugType": {
          "type": "string",
          "enum": [
            "type1",
            "type2",
            "c_h_ade_m_o",
            "c_c_s",
            "unspecified"
          ]
        }
      }
    },
    "all_energy_transfers": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AllEnergyTransfersResponse",
      "type": "object",
      "required": [
        "energy_transfers"
      ],
      "properties": {
        "energy_transfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnergyTransfer"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "EnergyTransfer": {
          "type": "object",
          "required": [
            "charger_id",
            "collateral",
            "driver",
            "energy_to_transfer",
            "energy_transfer_offer_id",
            "energy_transferred",
            "id",
            "offered_tariff",
            "owner",
            "paid_date",
            "status"
          ],
          "properties": {
            "charger_id": {
              "type": "string"
            },
            "collateral": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "driver": {
              "type": "string"
            },
            "energy_to_transfer": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "energy_transfer_offer_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "energy_transferred": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "offered_tariff": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "owner": {
              "type": "string"
            },
            "paid_date": {
              "$ref": "#/definitions/Timestamp"
            },
            "status": {
              "$ref": "#/definitions/TransferStatus"
            }
          },
          "additionalProperties": false
        },
        "Timestamp": {
          "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
          "allOf": [
            {
              "$ref": "#/definitions/Uint64"
            }
          ]
        },
        "TransferStatus": {
          "type": "string",
          "enum": [
            "Requested",
            "Ongoing",
            "Paid",
            "Cancelled",
            "Unspecified"
          ]
        },
        "Uint64": {
          "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
          "type": "string"
        }
      }
    },
    "denom": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DenomResponse",
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "energy_transfer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EnergyTransferResponse",
      "type": "object",
      "required": [
        "energy_transfer"
      ],
      "properties": {
        "energy_transfer": {
          "$ref": "#/definitions/EnergyTransfer"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "EnergyTransfer": {
          "type": "object",
          "required": [
            "charger_id",
            "collateral",
            "driver",
            "energy_to_transfer",
            "energy_transfer_offer_id",
            "energy_transferred",
            "id",
            "offered_tariff",
            "owner",
            "paid_date",
            "status"
          ],
          "properties": {
            "charger_id": {
              "type": "string"
            },
            "collateral": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "driver": {
              "type": "string"
            },
            "energy_to_transfer": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "energy_transfer_offer_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "energy_transferred": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "offered_tariff": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "owner": {
              "type": "string"
            },
            "paid_date": {
              "$ref": "#/definitions/Timestamp"
            },
            "status": {
              "$ref": "#/definitions/TransferStatus"
            }
          },
          "additionalProperties": false
        },
        "Timestamp": {
          "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
          "allOf": [
            {
              "$ref": "#/definitions/Uint64"
            }
          ]
        },
        "TransferStatus": {
          "type": "string",
          "enum": [
            "Requested",
            "Ongoing",
            "Paid",
            "Cancelled",
            "Unspecified"
          ]
        },
        "Uint64": {
          "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
          "type": "string"
        }
      }
    },
    "energy_transfer_offer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EnergyTransferOfferResponse",
      "type": "object",
      "required": [
        "energy_transfer_offer"
      ],
      "properties": {
        "energy_transfer_offer": {
          "$ref": "#/definitions/EnergyTransferOffer"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "ChargerStatus": {
          "type": "string",
          "enum": [
            "Active",
            "Busy",
            "Inactive",
            "Unspecified"
          ]
        },
        "EnergyTransferOffer": {
          "type": "object",
          "required": [
            "charger_id",
            "charger_status",
            "id",
            "location",
            "name",
            "owner",
            "plug_type",
            "tariff"
          ],
          "properties": {
            "charger_id": {
              "type": "string"
            },
            "charger_status": {
              "$ref": "#/definitions/ChargerStatus"
            },
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "location": {
              "$ref": "#/definitions/Location"
            },
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "plug_type": {
              "$ref": "#/definitions/PlugType"
            },
            "tariff": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        "Location": {
          "type": "object",
          "required": [
            "latitude",
            "longitude"
          ],
          "properties": {
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "PlugType": {
          "type": "string",
          "enum": [
            "type1",
            "type2",
            "c_h_ade_m_o",
            "c_c_s",
            "unspecified"
          ]
        }
      }
    },
    "energy_transfer_offers": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EnergyTransferOffersByOwnerResponse",
      "type": "object",
      "required": [
        "energy_transfer_offers"
      ],
      "properties": {
        "energy_transfer_offers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnergyTransferOffer"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "ChargerStatus": {
          "type": "string",
          "enum": [
            "Active",
            "Busy",
            "Inactive",
            "Unspecified"
          ]
        },
        "EnergyTransferOffer": {
          "type": "object",
          "required": [
            "charger_id",
            "charger_status",
            "id",
            "location",
            "name",
            "owner",
            "plug_type",
            "tariff"
          ],
          "properties": {
            "charger_id": {
              "type": "string"
            },
            "charger_status": {
              "$ref": "#/definitions/ChargerStatus"
            },
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "location": {
              "$ref": "#/definitions/Location"
            },
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "plug_type": {
              "$ref": "#/definitions/PlugType"
            },
            "tariff": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        "Location": {
          "type": "object",
          "required": [
            "latitude",
            "longitude"
          ],
          "properties": {
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "PlugType": {
          "type": "string",
          "enum": [
            "type1",
            "type2",
            "c_h_ade_m_o",
            "c_c_s",
            "unspecified"
          ]
        }
      }
    },
    "energy_transfers": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EnergyTransfersByOwnerResponse",
      "type": "object",
      "required": [
        "energy_transfers"
      ],
      "properties": {
        "energy_transfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnergyTransfer"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "EnergyTransfer": {
          "type": "object",
          "required": [
            "charger_id",
            "collateral",
            "driver",
            "energy_to_transfer",
            "energy_transfer_offer_id",
            "energy_transferred",
            "id",
            "offered_tariff",
            "owner",
            "paid_date",
            "status"
          ],
          "properties": {
            "charger_id": {
              "type": "string"
            },
            "collateral": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "driver": {
              "type": "string"
            },
            "energy_to_transfer": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "energy_transfer_offer_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "energy_transferred": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "offered_tariff": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "owner": {
              "type": "string"
            },
            "paid_date": {
              "$ref": "#/definitions/Timestamp"
            },
            "status": {
              "$ref": "#/definitions/TransferStatus"
            }
          },
          "additionalProperties": false
        },
        "Timestamp": {
          "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
          "allOf": [
            {
              "$ref": "#/definitions/Uint64"
            }
          ]
        },
        "TransferStatus": {
          "type": "string",
          "enum": [
            "Requested",
            "Ongoing",
            "Paid",
            "Cancelled",
            "Unspecified"
          ]
        },
        "Uint64": {
          "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
          "type": "string"
        }
      }
    },
    "own_energy_transfers": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OwnEnergyTransfersResponse",
      "type": "object",
      "required": [
        "energy_transfers"
      ],
      "properties": {
        "energy_transfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnergyTransfer"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "EnergyTransfer": {
          "type": "object",
          "required": [
            "charger_id",
            "collateral",
            "driver",
            "energy_to_transfer",
            "energy_transfer_offer_id",
            "energy_transferred",
            "id",
            "offered_tariff",
            "owner",
            "paid_date",
            "status"
          ],
          "properties": {
            "charger_id": {
              "type": "string"
            },
            "collateral": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "driver": {
              "type": "string"
            },
            "energy_to_transfer": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "energy_transfer_offer_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "energy_transferred": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "offered_tariff": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "owner": {
              "type": "string"
            },
            "paid_date": {
              "$ref": "#/definitions/Timestamp"
            },
            "status": {
              "$ref": "#/definitions/TransferStatus"
            }
          },
          "additionalProperties": false
        },
        "Timestamp": {
          "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
          "allOf": [
            {
              "$ref": "#/definitions/Uint64"
            }
          ]
        },
        "TransferStatus": {
          "type": "string",
          "enum": [
            "Requested",
            "Ongoing",
            "Paid",
            "Cancelled",
            "Unspecified"
          ]
        },
        "Uint64": {
          "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
          "type": "string"
        }
      }
    }
  }
}
